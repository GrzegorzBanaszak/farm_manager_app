// <auto-generated />
using System;
using FarmManagement.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FarmManagement.Infrastructure.Migrations
{
    [DbContext(typeof(AnimalDbContext))]
    [Migration("20250719153326_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FarmManagement.Domain.Animals.Aggregate.Animal", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("Animals", (string)null);
                });

            modelBuilder.Entity("FarmManagement.Domain.Animals.Entities.HealthRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AnimalId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CheckDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.ToTable("HealthRecords", (string)null);
                });

            modelBuilder.Entity("FarmManagement.Domain.Animals.Entities.HealthRecord", b =>
                {
                    b.HasOne("FarmManagement.Domain.Animals.Aggregate.Animal", null)
                        .WithMany("HealthRecords")
                        .HasForeignKey("AnimalId");
                });

            modelBuilder.Entity("FarmManagement.Domain.Animals.Aggregate.Animal", b =>
                {
                    b.Navigation("HealthRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
